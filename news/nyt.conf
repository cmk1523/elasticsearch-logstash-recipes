input { 
	http_poller {
		urls => {
			"arts" => "https://api.nytimes.com/svc/topstories/v2/arts.json?api-key=[key]"
			"books" => "https://api.nytimes.com/svc/topstories/v2/books.json?api-key=[key]"
			"business" => "https://api.nytimes.com/svc/topstories/v2/business.json?api-key=[key]"
			"health" => "https://api.nytimes.com/svc/topstories/v2/health.json?api-key=[key]"
			"home" => "https://api.nytimes.com/svc/topstories/v2/home.json?api-key=[key]"
			"movies" => "https://api.nytimes.com/svc/topstories/v2/movies.json?api-key=[key]"
			"national" => "https://api.nytimes.com/svc/topstories/v2/national.json?api-key=[key]"
			"politics" => "https://api.nytimes.com/svc/topstories/v2/politics.json?api-key=[key]"
			"science" => "https://api.nytimes.com/svc/topstories/v2/science.json?api-key=[key]"
			"sports" => "https://api.nytimes.com/svc/topstories/v2/sports.json?api-key=[key]"
			"technology" => "https://api.nytimes.com/svc/topstories/v2/technology.json?api-key=[key]"
			"world" => "https://api.nytimes.com/svc/topstories/v2/world.json?api-key=[key]"
		}
		tags => "nyt"
		schedule => { every => "10s" }			
		codec => "json"
	}
}

filter {
	if "nyt" in [tags] {
		mutate {
			remove_field => [
				"num_results",
				"last_updated",
				"copyright",
				"section",
				"status"
			]
		}

		split {
			field => "results"
		}
		
		mutate {
			rename => [
				"[results][abstract]", "abstract",
				"[results][byline]", "byline",
				"[results][created_date]", "created_date",
				"[results][des_facet]", "des_facet",
				"[results][geo_facet]", "geo_facet",
				"[results][item_type]", "item_type",
				"[results][kicker]", "kicker",
				"[results][material_type_facet]", "material_type_facet",
				"[results][multimedia]", "multimedia",
				"[results][org_facet]", "org_facet",
				"[results][per_facet]", "per_facet",
				"[results][published_date]", "published_date",
				"[results][section]", "section",
				"[results][short_url]", "short_url",
				"[results][subsection]", "subsection",
				"[results][title]", "title",
				"[results][updated_date]", "updated_date",
				"[results][url]", "url"
			]
		}
		
		mutate {
			remove_field => [
				"results"
			]
		}
	}
}
 
output { 
	if "nyt" in [tags] {
		#stdout { } 
		stdout { codec => rubydebug }
		
		#file {
		#	path => "/home/chris/news.json"
		#}
		
		elasticsearch {
			action => "index"
			doc_as_upsert => true
			hosts => ["localhost:9200"]
			index => "news-%{+YYYYMMdd}"
			document_id => "%{short_url}"
			#user => "elastic"
			#password => "changeme"
		}
	}
}
